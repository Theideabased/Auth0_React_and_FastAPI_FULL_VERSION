{"ast":null,"code":"var _jsxFileName = \"/home/seyman/frontend/frontend/src/pages/Callback.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Callback = () => {\n  _s();\n  const navigate = useNavigate();\n  useEffect(() => {\n    const handleAuthCallback = async () => {\n      try {\n        const queryParams = new URLSearchParams(window.location.search);\n        const error = queryParams.get(\"error\");\n        const errorDescription = queryParams.get(\"error_description\");\n        const code = queryParams.get(\"code\");\n        if (error) {\n          throw new Error(`Authorization error: ${errorDescription}`);\n        }\n        if (!code) {\n          throw new Error(\"No authorization code found\");\n        }\n\n        // Send the code to the backend to exchange it for tokens\n        const response = await fetch(\"http://localhost:8000/api/callback\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            code\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to exchange code for tokens\");\n        }\n        const tokens = await response.json();\n\n        // Store tokens securely (e.g., in session storage)\n        sessionStorage.setItem(\"accessToken\", tokens.access_token);\n        sessionStorage.setItem(\"idToken\", tokens.id_token);\n\n        // Navigate to the dashboard\n        navigate(\"/dashboard\");\n      } catch (error) {\n        console.error(\"Error handling the callback:\", error);\n        navigate(\"/error\");\n      }\n    };\n    handleAuthCallback();\n  }, [navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_s(Callback, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Callback;\nexport default Callback;\nvar _c;\n$RefreshReg$(_c, \"Callback\");","map":{"version":3,"names":["useEffect","useNavigate","jsxDEV","_jsxDEV","Callback","_s","navigate","handleAuthCallback","queryParams","URLSearchParams","window","location","search","error","get","errorDescription","code","Error","response","fetch","method","headers","body","JSON","stringify","ok","tokens","json","sessionStorage","setItem","access_token","id_token","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/seyman/frontend/frontend/src/pages/Callback.js"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Callback = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const handleAuthCallback = async () => {\n      try {\n        const queryParams = new URLSearchParams(window.location.search);\n        const error = queryParams.get(\"error\");\n        const errorDescription = queryParams.get(\"error_description\");\n        const code = queryParams.get(\"code\");\n\n        if (error) {\n          throw new Error(`Authorization error: ${errorDescription}`);\n        }\n\n        if (!code) {\n          throw new Error(\"No authorization code found\");\n        }\n\n        // Send the code to the backend to exchange it for tokens\n        const response = await fetch(\"http://localhost:8000/api/callback\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ code }),\n        });\n\n        if (!response.ok) {\n          throw new Error(\"Failed to exchange code for tokens\");\n        }\n\n        const tokens = await response.json();\n\n        // Store tokens securely (e.g., in session storage)\n        sessionStorage.setItem(\"accessToken\", tokens.access_token);\n        sessionStorage.setItem(\"idToken\", tokens.id_token);\n\n        // Navigate to the dashboard\n        navigate(\"/dashboard\");\n      } catch (error) {\n        console.error(\"Error handling the callback:\", error);\n        navigate(\"/error\");\n      }\n    };\n\n    handleAuthCallback();\n  }, [navigate]);\n\n  return <div>Loading...</div>;\n};\n\nexport default Callback;"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMO,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,WAAW,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;QAC/D,MAAMC,KAAK,GAAGL,WAAW,CAACM,GAAG,CAAC,OAAO,CAAC;QACtC,MAAMC,gBAAgB,GAAGP,WAAW,CAACM,GAAG,CAAC,mBAAmB,CAAC;QAC7D,MAAME,IAAI,GAAGR,WAAW,CAACM,GAAG,CAAC,MAAM,CAAC;QAEpC,IAAID,KAAK,EAAE;UACT,MAAM,IAAII,KAAK,CAAC,wBAAwBF,gBAAgB,EAAE,CAAC;QAC7D;QAEA,IAAI,CAACC,IAAI,EAAE;UACT,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChD;;QAEA;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;UACjEC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YACP,cAAc,EAAE;UAClB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAER;UAAK,CAAC;QAC/B,CAAC,CAAC;QAEF,IAAI,CAACE,QAAQ,CAACO,EAAE,EAAE;UAChB,MAAM,IAAIR,KAAK,CAAC,oCAAoC,CAAC;QACvD;QAEA,MAAMS,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;;QAEpC;QACAC,cAAc,CAACC,OAAO,CAAC,aAAa,EAAEH,MAAM,CAACI,YAAY,CAAC;QAC1DF,cAAc,CAACC,OAAO,CAAC,SAAS,EAAEH,MAAM,CAACK,QAAQ,CAAC;;QAElD;QACAzB,QAAQ,CAAC,YAAY,CAAC;MACxB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdmB,OAAO,CAACnB,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;QACpDP,QAAQ,CAAC,QAAQ,CAAC;MACpB;IACF,CAAC;IAEDC,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,oBAAOH,OAAA;IAAA8B,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAC9B,CAAC;AAAChC,EAAA,CAlDID,QAAQ;EAAA,QACKH,WAAW;AAAA;AAAAqC,EAAA,GADxBlC,QAAQ;AAoDd,eAAeA,QAAQ;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}